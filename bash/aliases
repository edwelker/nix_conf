alias rebash="source ~/.bashrc; echo -e '\nBash config reloaded'"
alias aliases="vi ${DOTDOT}/bash/aliases && source ~/.bashrc"
alias galiases="vi ${DOTDOT}/git/gitconfig && source ~/.bashrc"
alias envs="vi ${DOTDOT}/bash/env && source ~/.bashrc"
alias dotdot="cd ${DOTDOT}"

alias c="clear"

alias vi=$(which vim)

alias l='ls'
alias ls='ls -GF'
alias ll='ls -hlF'
alias la='ls -alF'
alias lt='ls -to'
alias lal='ls -al | less'
alias lsd='ls -d */'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias md='mkdir -p'

alias pd="pushd"
alias pd1="pushd +1"
alias pd2="pushd +2"
alias dirs='dirs -v'

alias h='history'
alias r='fc -s'
alias hl='fc -l'

alias py='python'
alias py3='python3'
alias ma='python manage.py'
alias rs='python manage.py runserver'
alias shell='python manage.py shell_plus'
alias db='python manage.py dbshell'
alias ipy="python -c 'import IPython; IPython.terminal.ipapp.launch_new_instance()'"

alias venv='source venv/bin/activate'

alias nz='nosetests'
alias pip-upgrade="pip install --upgrade"
alias pip-old="pip list -o"
alias pip-local="egrep -v -f ${DOTDOT}/requirements.txt"

alias findhere='find . -iname'
alias findhome='find ~ -iname'
alias findeverywhere='find / -iname'
alias f='egrep -ir * -e'

alias hi='pygmentize -f console256 -g'

alias t='tmux'
alias ta='tmux attach -t'
alias tn='tmux new-session -s'
alias tl='tmux list-sessions'
alias td='tmux detach'
alias tk='tmux kill-session -t'

alias w='w -s'
alias lookup="/usr/local/bin/lookup"

if [ -f ./ncbi ]; then
    . ncbi
fi

# from morty
path_filter_nfs(){ export PATH=$(/bin/echo $PATH|/usr/bin/tr ":" "\n"|/bin/egrep -v '^/(net|am|usr/local)'|/usr/bin/tr "\n" :) ;}

alias os='cat /etc/*-release'
alias kernel='uname -a'
alias top='COLUMNS=200 top -c'
alias rc='chkconfig --list'
alias netstat='netstat -plant'
alias psg='ps -ef | grep'
alias netstat_mac="sudo lsof -i -P"
alias threads="ps -o nlwp"
alias duhere="du -h --max-depth=1"
alias dusort="du -sk * | sort -n"
alias dirsize="du -sh"
alias permissionshere="namei -m $(pwd -P)"

#systemd
alias psc='ps xawf -eo pid,user,cgroup,args'
alias cgrps='systemd-cgls'

alias error_tail='tail -n 40 /web/public/logs/error'
alias tail='tail -f'

alias work="~/bin/work.sh"
alias iweb="cd ~/iwebdev-welkere"
alias lbsg="lbsmc | grep"

alias agent='eval $(ssh-agent); ssh-add ~/.ssh/id_rsa'

alias sr='ssh-reagent'
alias sk='ssh-keygen -t rsa -b 4096'

alias g='git'
alias gp='git push'
alias gpp='git pull && git push'
alias gpt='git push && git push --tags'
alias ginitpy="git init --template=${DOTDOT}/pygittemplate"
alias ghome="cd $(g root)"
alias b='bzr'

alias vu='vagrant up'
alias vs='vagrant ssh'
alias vd='vagrant destroy -f'

alias brewu='brew update && brew upgrade && brew cleanup -s; brew doctor'

function port(){
  fuser $1/tcp
}

function port-and-app(){
  # xargs strips whitespace
  ls -al /proc/$(fuser $1/tcp | xargs)/exe
}

#get openssl cert for proxying
function getcert(){
    if [ $# -lt 2 ]; then
        echo 1>&2 "$0: not enough arguments, specify host and filename.pem"
        exit 2
    else
        openssl s_client -showcerts -connect $1:443 </dev/null 2>/dev/null|openssl x509 -outform PEM >$2
    fi
}

# fix permissions, standard 644 on files, 755 on directories
function fixpermissions(){
    if [ $# -lt 2 ]; then
        echo 1>&2 "$0: not enough arguments, specifiy the directory to start in"
        exit 2
    else
        find $1 -type d -exec chmod 755 {} +
        find $1 -type f -exec chmod 644 {} +
    fi
}

alias removetokens='/bin/rm -rf /private/var/db/TokenCache/*'

#stolen from elsewhere : https://gist.github.com/aliang/1024466
# SSH Auto Completion of Remote Hosts
_complete_ssh_hosts ()
{
COMPREPLY=()
cur="${COMP_WORDS[COMP_CWORD]}"
comp_ssh_hosts=`cat ~/.ssh/known_hosts | \
cut -f 1 -d ' ' | \
sed -e s/,.*//g | \
grep -v ^# | \
     uniq | \
     grep -v "\[" ;
cat ~/.ssh/config | \
        grep "^Host " | \
        awk '{print $2}'
        `
        COMPREPLY=( $(compgen -W "${comp_ssh_hosts}" -- $cur))
        return 0
        }
complete -F _complete_ssh_hosts ssh

#http://www.bit-integrity.com/2011/08/vim-syntax-highlighting-with-less.html
VLESS=$(find /usr/share/vim -name 'less.sh')
if [ ! -z $VLESS ]; then
  alias less=$VLESS
fi

lsa(){
    egrep ${DOTDOT}/bash/aliases -e 'alias' | awk '{$1=""; print $0}'
}

lastcommand(){
    h | tail -n 2 | head -n 1 | awk '{$1=""; $2=""; print $0}' | sed -e 's/^ *//' 
}
alias savelastcommand='lastcommand >'

#openshift
alias rh='rhc'
alias rht='rhc tail'
alias rhe='rhc env'
alias rhse='rhc set-env'
alias rhls='rhc apps'

#scala
alias sbc="sbt clean"
alias server="sbt server/run"
alias client="sbt client/run"
alias srun="sbt run"
alias sct="sbt clean clean-files coverage test coverageReport"

function fr(){
    if [ $# -lt 2 ]; then
        echo 1>&2 "$0: not enough arguments"
        exit 2
    else
        ag -l $1 | xargs sed -i "s/$1/$2/"
    fi
}

function gurm(){
    if [ $# -lt 1 ]; then
        echo 1>&2 "$0: wrong number of arguments"
        exit 2
    else
        git reset -- $1 && g checkout -- $1;
    fi
}


linux_servers ()
{
   awk '/#lnx-srv-/{print $2}' /etc/hosts.nis
}

alias rvmlist="rvm list known"
alias rvminstall="rvm install"
alias rvmuse="rvm use"
alias rvmdefault="rvm use system"
alias rvmsys="rvm use system"
alias rvmnoautolibs="rvm autolibs disable"  # Don't use yum, etc.
