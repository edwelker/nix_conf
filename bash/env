export EDITOR="vi"
export PAGER="less"
export LESS="-R"
export TERM=xterm-256color
export CDPATH=.:~:~/code:~/code/python:~/code/scala:~/src:~/bin:$DOTDOT
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/lib
# export HISTIGNORE="&:ls:[bf]g:exit:history*:pwd:clear"
export HISTTIMEFORMAT="%y-%m-%dT%T "

. ${DOTDOT}/bash/javaenv
. ${DOTDOT}/bash/grailsenv
. ${DOTDOT}/bash/go
. ${DOTDOT}/bash/ncbi

PS1='\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[0;33m\] \[\033[00m\]\$ '

#because I hit ctrl-s all the time
stty ixany
stty ixoff -ixon

#because I occasionally kill shells by Ctrl+d, don't send eof.
set -o ignoreeof

if command -v dnsdomainname 1>/dev/null && [[ $(dnsdomainname 2>/dev/null) =~ ^.*ncbi.*$ ]]; then
    CDPATH=$CDPATH:/net/iwebdev2/export/home/web/private/htdocs/staff/welkere
    export CDPATH;

    export TMPDIR=/tmp

    export PATH=/usr/local/python/all/bin/:"$PATH"
fi

if [ -f /usr/bin/dircolors ]
  then
    export LS_OPTIONS='-F --color=auto'
    eval `dircolors`
    alias ls='ls $LS_OPTIONS'

    alias grep='grep --color=auto'
fi

shopt -s histappend
export PROMPT_COMMAND='history -a'
export HISTSIZE=20000

PATH=~/bin:$DOTDOT/bin:$PATH
export PATH

if [ -d /usr/local/bin/ ];then
    export PATH=/usr/local/bin:$PATH
fi

# pipsi
if [ -d ~/.local/bin ];then
    export PATH=~/.local/bin:$PATH
fi

if [ -d /Users/welkere/Library/Python/2.7/bin ];then
    export PATH=/Users/welkere/Library/Python/2.7/bin:$PATH
fi

if [ -f ~/.pythonstartup ]; then
    export PYTHONSTARTUP=~/.pythonstartup
fi

if [ -d ~/.rvm/bin ]; then
    export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
fi

if [ -d ~/node_modules/.bin ]; then
    export PATH=~/node_modules/.bin:$PATH
fi

export PYTHONDONTWRITEBYTECODE=1

export VENVWRAPPER=$(command -v virtualenvwrapper.sh 2>/dev/null)
if [ ! -z "$VENVWRAPPER" ]; then
    export WORKON_HOME=$HOME/env
    export PROJECT_HOME=$HOME/code/python
    source "$VENVWRAPPER"
fi


# pip bash completion start
# _pip_completion()
# {
#     COMPREPLY=( $( COMP_WORDS="${COMP_WORDS[*]}" \
#                     COMP_CWORD=$COMP_CWORD \
#                     PIP_AUTO_COMPLETE=1 $1 ) )
# }
# complete -o default -F _pip_completion pip
# pip bash completion end

#lang/locale settings
export LC_ALL='en_US.UTF-8'
export LANG='en_US.UTF-8'

#completion
#TODO: clean up these three identical if statements
if [ -f /etc/bash_completion ]; then
    source /etc/bash_completion
fi

if [ -d /etc/bash_completion.d/ ]; then
   source /etc/bash_completion.d/git
   source /etc/bash_completion.d/yum
   complete -o default -o nospace -F _git g
fi

if command -v brew 1>/dev/null && [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

if [ -f ${DOTDOT}/git/git-prompt.sh ]; then
    . ${DOTDOT}/git/git-prompt.sh
    GIT_PS1_SHOWDIRTYSTATE=true
    PS1='\[\033[01;32m\][\!] \u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[0;33m\] \[\033[0;33m\]$(__git_ps1 "(%s)") \[\033[00m\]\$ '
fi

#aws completion
if [ -x $(which aws_completer 2>/dev/null) ]; then
    complete -C aws_completer aws
fi

#http://tychoish.com/rhizome/9-awesome-ssh-tricks/
#ssh-agent runs per-session, so tmux can't always find it. 
#don't re-run, just find the real one
ssh-reagent () {
    for agent in $TMPDIR/ssh-*/agent.*; do
        export SSH_AUTH_SOCK=$agent
        if ssh-add -l 2>&1 > /dev/null; then
            echo Found working SSH Agent:
            ssh-add -l
            return
        fi
    done
    echo Cannot find ssh agent - maybe you should reconnect and forward it?
}

#for xforwarding
#see http://brainscraps.wikia.com/wiki/Extreme_Multitasking_with_tmux_and_PuTTY
update_display() {
    good_display=$(netstat -an | /bin/grep 0\ [0-9,:,.]*:60..\  | awk '{print $4}' | tail -n 1)
    good_display=${good_display: -2}
    export DISPLAY=${HOSTNAME}:${good_display}.0
}

if [ -d ~/.rvm/bin ]; then
    PS1="\$(~/.rvm/bin/rvm-prompt) $PS1"
fi

export PS1

#. ${DOTDOT}/vim/vim/bundle/powerline/powerline/bindings/bash/powerline.sh

#install the groovy enVironment Manager
[[ -r "~/.gvm/bin/gvm-init.sh" ]] && source "~/.gvm/bin/gvm-init.sh"
