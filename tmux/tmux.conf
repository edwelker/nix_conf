set-option -g prefix C-a

bind-key C-a last-window

#unbind % #unbind since we're replacing this
#bind | split-window -h
#bind - split-window -v

#this is fine if not using basic, or adding new windows
#setw -g automatic-rename

#set timeout small so vim... works
set -s escape-time 0

#keep lines
set -g history-limit 30000

#vim keys
set -g mode-keys vi
set -g status-keys vi

setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection # Begin selection in copy mode.
bind-key -t vi-copy 'C-v' rectangle-toggle # Begin selection in copy mode.
bind-key -t vi-copy 'y' copy-selection # Yank selection in copy mode.

bind p paste-buffer

# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind C-y run "tmux save-buffer - | xclip -i"

#mouse
# Turned off b/c of the darned select problem. Too lazy for
# http://tangledhelix.com/blog/2012/07/16/tmux-and-mouse-mode/
# http://awhan.wordpress.com/2012/04/18/tmux-copy-paste-with-mouse/
# ---- Keep these off
set -g mouse-select-pane off
set-option -g mouse-select-window off
set-option -g mouse-resize-pane off
# ---- Keep these on for selection
set-option -g mouse-utf8 on
set-window-option -g mode-mouse on

#remain-on-exit... will it solve the problem where a failed command will close the window?
set -g remain-on-exit on

#respawn remained window (see above)
bind-key C-R respawn-window

#make tmux use "normal screen" as per FAQ
set -ga terminal-overrides 'xterm*:smcup@:rmcup@'

#reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded"

#size to largest client window
setw -g aggressive-resize on

#http://www.tylercipriani.com/2013/09/12/important-lines-in-my-tmux.html
bind-key z resize-pane -Z \; display-message "Zoom"

# swap window demos
# bind-key T swap-window -t 2
# bind-key M move-window -t 0
bind-key m command-prompt -p "Swap window with:"  "swap-window -t '%%'"

#start window index at 1
set -g base-index 1

#256 color
set -g default-terminal "screen-256color"

#utf8 (I wonder if the last duplicates one of the earlier)
setw -g utf8 on
set -g status-utf8 on
set-window-option -g utf8 on

#my basic setup
bind b source-file "$DOTDOT/tmux/basic.conf" \; display-message "Basic config loaded"

#move around with hjkl
# bind C-h select-pane -L
# bind C-j select-pane -D
# bind C-k select-pane -U
# bind C-l select-pane -R

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# show the display longer
set-option -g display-time 400

#all of this stuff was taken from elsewhere, so I have little idea what it does
#and yes, later rules overwrite previous rules
# statusbar --------------------------------------------------------------
set -g window-status-format "#I:#W"
set -g window-status-current-format "#I:#W"

bind-key -t vi-edit Up history-up
bind-key -t vi-edit Down history-down

set -g status-interval 1
set -g status-justify centre # center align window list

# default statusbar colors
set -g status-fg white
set -g status-bg default

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr dim

# command/message line colors
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# Statusbar if tmux run in console
# information normally in dwm bar
set -g status-attr bright
set -g status-right-length 50
set -g status-left-length 50

# default window title colors
set-window-option -g window-status-fg black
set-window-option -g window-status-bg default
set-window-option -g window-status-attr bright

#borders
set -g pane-border-fg green
set -g pane-border-bg black
set -g pane-active-border-fg white
set -g pane-active-border-bg yellow

# message colours
set -g message-fg black
set -g message-bg green
set -g message-attr bright

set -g status-left "#[fg=blue] #H #[fg=black]• #[fg=green]#(cat /etc/system-release)"
#set -g status-left "#[fg=blue] #H #[fg=black]• #[fg=green]#(uname -r) #[fg=black]• #[fg=yellow]#(./git branch)"
set -g status-right "#[fg=magenta]#(awk \'{ print $1,$2,$3 }\' </proc/loadavg)#[fg=black] • #[fg=yellow,nobright]%I:%M #[default] "
#set -g status-right "#[fg=yellow,nobright]Mail: #(tmuxmail.sh)#[fg=black,bright] • #[fg=magenta]#(awk \'{ print $1,$2,$3 }\' </proc/loadavg)#[fg=black] • #[fg=cyan]%I:%M #[default] "
